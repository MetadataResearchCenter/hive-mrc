#summary How to import a new vocabulary into HIVE
 
<wiki:toc max_depth="1" />

HIVE is able to import any vocabulary from a RDF/SKOS file. If the
vocabulary is in another format, it must be converted into SKOS before importing.

In order to import a new vocabulary you must:
  # Create a configuration file with the paths to the files and indexes that will be generated by the HIVE import tools. 
  # Run the AdminVocabularies class to perform the import

== How to create your configuration file ==
                                                                                
Each vocabulary has its own configuration file, with the following format:
                                                                                 
{{{
#Vocabulary data
name = NBII
longName = CSA/NBII Biocomplexity Thesaurus 
uri = http://thesaurus.nbii.gov 

#Sesame Store
store = /usr/local/hive/hive-data/nbii/store

#Lucene Inverted Index 
index = /usr/local/hive/hive-data/nbii/index

#Alphabetical Index
alpha_file = /usr/local/hive/hive-data/nbii/alphaIndex

#Top Concept Index       
top_concept_file = /usr/local/hive/hive-data/nbii/topConceptIndex

#KEA data files          
stopwords = /usr/local/hive/hive-data/nbii/KEA/data/stopwords/stopwords_en.txt
kea_training_set = /usr/local/hive/hive-data/nbii/KEA/train
kea_test_set = /usr/local/hive/hive-data/nbii/KEA/test
rdf_file = /usr/local/hive/hive-data/nbii/nbii3.rdf
kea_model = /usr/local/hive/hive-data/nbii/KEA/nbii
}}}
                                                                                   
Place the configuration file in the same directory as the "hive.properties" file. The "hive.properties" file is used by SKOSServer identify which vocabularies will be opened.

The HIVE configuration directory may look like:

{{{
conf/ 
  agrovoc.properties 
  hive.properties
  lcsh.properties
  mesh.properties
  nbii.properties
  tgn.properties
}}}
       
== AdminVocabularies ==

Before running AdminVocabularies, make sure Tomcat is not running. A single process can access the HIVE index files at a time.

AdminVocabularies takes these parameters:
    # Path to configuration directory
    # Name of the vocabulary
    # Activate training option for KEA algorithm (optional, If you don't train your system, you can not use automatic indexing classes)                                                      
    

For example (with training): 
{{{
java  -Djava.ext.dirs=/path/to/tomcat6/webapps/ROOT/WEB-INF/lib  edu.unc.ils.mrc.hive.admin.AdminVocabularies /path/to/tomcat6/webapps/WEB-INF/conf/ lter train
}}}

To load the vocabulary without training, omit the parameter "train".

Once the vocabulary has been loaded, you may start Tomcat and test to make sure the vocabulary is working properly.

== Effects of AdminVocabularies ==

The AdminVocabularies class uses a SKOSScheme that represents a SKOS vocabulary and an Importer which implements the import process. Importer is implemented as a Factory, although at this moment there is only one importer, for SKOS. Once an importer has been selected, the appropriate methods are called to store the thesaurus in appropriately indexed formats:

  * importThesaurustoDB(): adds data to the Sesame database. HIVE uses NativeStore, so vocabularies will be stored on the file system.
  * importThesaurustoInvertedIndex(): creates a Lucene index to store concepts. We are following a document-oriented approach to represent concepts in the inverted index, so each concept is represented as a document with multiple fields. Each field represent the elements in the vocabulary: preferred term, broader terms, scope notes, etc.

The Importer creates two additional indexes for every vocabulary, in order to optimize the access to different representations of the same vocabulary:

  * Alphabetical index: an alphabetically ordered list which makes it easier to represent concepts alphabetically
  * Hierarchical index: a hierarchical representation of the data in order to implement representations based on the hierarchical structure of the vocabularies.

All indexes and databases can be stored wherever you need in your file system. The location of each database and index is defined in the properties file for the vocabulary in the conf directory.